---
export interface Props {
  url?: string;
  title?: string;
  text?: string;
  class?: string;
}

const { 
  url = typeof window !== 'undefined' ? window.location.href : '',
  title = 'Queer Jews Personal',
  text = 'Check out this personal ad on Queer Jews',
  class: className = 'inline-flex items-center justify-center px-6 py-3 bg-gray-100 hover:bg-gray-200 dark:bg-gray-800 dark:hover:bg-gray-700 text-gray-700 dark:text-gray-300 font-semibold rounded-lg transition-colors'
} = Astro.props;
---

<button
  id="share-button"
  class={className}
>
  <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z" />
  </svg>
  Share Link
</button>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const shareButton = document.getElementById('share-button');
    if (!shareButton) return;
    
    shareButton.addEventListener('click', function() {
      const url = window.location.href;
      const button = this;
      const originalText = button.innerHTML;
      const originalClasses = button.className;
      
      // Try native share API first (mobile devices)
      if (navigator.share) {
        navigator.share({
          title: 'Queer Jews Personal',
          text: 'Check out this personal ad on Queer Jews',
          url: url
        }).catch((error) => {
          console.log('Share cancelled or failed:', error);
          // Fall back to clipboard copy
          copyToClipboard();
        });
      } else {
        // Desktop fallback: copy to clipboard
        copyToClipboard();
      }
      
      function copyToClipboard() {
        navigator.clipboard.writeText(url).then(() => {
          // Show success state
          button.innerHTML = `
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
            </svg>
            Copied!
          `;
          button.className = 'inline-flex items-center justify-center px-6 py-3 bg-green-100 hover:bg-green-200 dark:bg-green-900 dark:hover:bg-green-800 text-green-700 dark:text-green-300 font-semibold rounded-lg transition-colors';
          
          // Reset after 2 seconds
          setTimeout(() => {
            button.innerHTML = originalText;
            button.className = originalClasses;
          }, 2000);
        }).catch((error) => {
          console.error('Failed to copy to clipboard:', error);
          // Fallback for older browsers
          fallbackCopy();
        });
      }
      
      function fallbackCopy() {
        // Create temporary textarea for older browsers
        const textArea = document.createElement('textarea');
        textArea.value = url;
        textArea.style.position = 'fixed';
        textArea.style.left = '-999999px';
        textArea.style.top = '-999999px';
        document.body.appendChild(textArea);
        textArea.focus();
        textArea.select();
        
        try {
          document.execCommand('copy');
          // Show success state
          button.innerHTML = `
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" d="M5 13l4 4L19 7" />
            </svg>
            Copied!
          `;
          button.className = 'inline-flex items-center justify-center px-6 py-3 bg-green-100 hover:bg-green-200 dark:bg-green-900 dark:hover:bg-green-800 text-green-700 dark:text-green-300 font-semibold rounded-lg transition-colors';
          
          setTimeout(() => {
            button.innerHTML = originalText;
            button.className = originalClasses;
          }, 2000);
        } catch (error) {
          console.error('Fallback copy failed:', error);
          // Show error state
          button.innerHTML = `
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
            Failed
          `;
          button.className = 'inline-flex items-center justify-center px-6 py-3 bg-red-100 hover:bg-red-200 dark:bg-red-900 dark:hover:bg-red-800 text-red-700 dark:text-red-300 font-semibold rounded-lg transition-colors';
          
          setTimeout(() => {
            button.innerHTML = originalText;
            button.className = originalClasses;
          }, 2000);
        } finally {
          document.body.removeChild(textArea);
        }
      }
    });
  });
</script> 